.contact {
    // 主体最大的尺寸
    $contactSize: 500px;
    // 最小尺寸
    $contactMinSize: 250px;
    // 文本大小
    $contactFontSize: 26px;
    // 主体的边框宽度
    $borderWidth: .75em;
    // 内容到内边框之间的距离
    $innerPadding: 1em;

    // 边框颜色
    --borderColor: var(--themeColor);

    &-wrapper {
        height: 100vh;
        min-height: $contactSize;
        margin-top: $gapWidth;

        display: flex;
        align-items: center;
        justify-content: center;
    }

    // 页面较小时的主体宽度
    $_outerWidth: 100vmin - #{$miniMargin} * 2;
    $outerWidth: calc(100vmin - #{$miniMargin} * 2);
    // 主体外边界与内容之间的宽度
    $outerPadding: $borderWidth+$innerPadding;
    // 内容宽度
    $contentWidth: calc(100vmin - (#{$miniMargin} + #{$outerPadding}) * 2);
    $contentMaxWidth: calc(#{$contactSize} - #{$outerPadding * 2});
    $contentMinWidth: calc(#{$contactMinSize} - #{$outerPadding * 2});

    // 自适应页面，页面宽度较小时也能保持正方形边框
    width: $outerWidth;
    height: $outerWidth;

    max: {
        width: $contactSize;
        height: $contactSize;
    }

    min: {
        width: $contactMinSize;
        height: $contactMinSize;
    }

    padding: $innerPadding;
    border: 0.75em var(--borderColor) solid;

    display: flex;
    flex-direction: column;
    justify-content: space-between;

    box-shadow: 0 0 6px var(--borderColor),
    inset 0 0 6px var(--borderColor);

    transition: border .5s,
    box-shadow .5s;

    // 用于为子元素提供参考字体大小
    font-size: $contactFontSize;

    position: relative;

    &:hover {
        --borderColor: var(--embelliColor);
    }

    &-header {
        display: flex;
        flex-direction: column;
        font-family: $headerFont;
        text-shadow: $textShadow;
        line-height: 1;

        h2 {
            font-size: 2.6em;
            margin-bottom: .2em;
            font-weight: 700;
        }

        h1 {
            font-size: 1.25em;
            margin-left: 0.1em; // 微调因字体大小导致视觉不对齐
        }
    }

    &-texts {
        &>* {
            opacity: 0;

            position: absolute;
            bottom: $innerPadding;
            left: $innerPadding;

            width: $contentWidth;
            min-width: $contentMinWidth;

            max: {
                width: $contentMaxWidth;
                height: $contentMaxWidth;
            }

            text-shadow: $textShadow;

            pointer-events: none;

            p {
                font-size: 1em;
                /* 宽度过小时，仍然支持换行 */
                overflow-wrap: break-word;
            }
        }

        .contact-default {
            pointer-events: initial;
            opacity: 1;
        }

        .qrcode {
            &-wrapper {
                height: $contentWidth;
                min-height: $contentMinWidth;
            }

            width: 100%;
        }
    }

    .switch-bar {
        position: absolute;
        bottom: calc(-1 * (#{$borderWidth} + 2.5em));
        left: 0;

        width: 100%;
        display: flex;

        .contact-btns {
            display: flex;

            .icon-btn {
                height: 2em;
                width: 2em;
                position: relative;

                .icons {
                    position: absolute;
                    top: .5em;
                    left: .5em;

                    width: 1em;
                    height: 1em;

                    i {
                        position: absolute;
                        top: 0;
                        left: 0;
                        font-size: 1em;
                    }

                    .icon-svg {
                        width: 1em;
                        height: 1em;
                        fill: currentColor;
                        overflow: hidden;

                        opacity: 0;
                        position: absolute;
                        left: 0;
                        top: 0;
                        pointer-events: none;
                    }

                    .icon-music {
                        color: #e72d2c;
                        opacity: 0;
                    }
                }
            }
        }


        .btn-info {
            font-size: .75em;
            color: var(--textColor);

            padding-left: 1em;
            display: flex;
            align-items: center;

            // 禁止换行
            white-space: nowrap;

            opacity: 0;
        }
    }

    @media screen and (max-width: 570px),
    screen and (max-height: 570px) {
        font-size: $contactFontSize * .8;
    }

    @media screen and (max-width: 426px) {
        .switch-bar {
            margin-left: .5em;
            flex-direction: column;
            transform: translate3d(0, 1.2em, 0);

            .btn-info {
                margin: .2em 0 0 .6em;
                padding: 0;
            }
        }
    }

    @media screen and (max-width: 400px) {
        $minWidth: 80vw;
        width: $minWidth;
        height: $minWidth * 1.35;

        &-texts {
            &>* {
                width: calc(#{$minWidth} - #{$outerPadding} * 2);
            }
        }

        .qrcode-wrapper {
            width: calc(#{$minWidth} - #{$outerPadding} * 2);
            height: calc(#{$minWidth} - #{$outerPadding} * 2);
        }
    }

    @media screen and (max-height: 550px) {
        font-size: $contactFontSize * .7;
    }

    @media screen and (max-height: 425px) {
        font-size: $contactFontSize * .65;
    }

}
