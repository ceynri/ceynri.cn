.cursor {
    &-wrapper {
        // wrapper只负责居中布局
        width: 100%;
        height: 100%;
        position: absolute;
        top: 0;
        left: 0;

        display: flex;
        justify-content: center;
        align-items: center;
        flex-wrap: nowrap;
        overflow: visible;
    }

    flex: none;

    &-inner-box {
        width: $innerBoxSize;
        height: $innerBoxSize;

        overflow: visible;
        position: fixed;
        pointer-events: none;
        z-index: 12000;
        // 一开始先让鼠标处于屏幕外
        transform: translate3d(-200px, -200px, 0);

        .point {
            width: $normalInnerCursorSize / 2;
            height: $normalInnerCursorSize / 2;

            background: var(--cursorColor);
            border-radius: 50%;
        }

        .zoom-in {
            width: $normalInnerCursorSize;
            height: $normalInnerCursorSize;
            position: relative;

            &::before,
            &::after {
                content: '';
                position: absolute;
                left: $normalInnerCursorSize / 2;
                height: $normalInnerCursorSize;
                width: 1px;
                background: var(--cursorColor);
            }

            &::before {
                transform: rotate(-45deg);
            }

            &::after {
                transform: rotate(45deg);
            }
        }

        .page-down {
            width: $normalInnerCursorSize;
            height: $normalInnerCursorSize;
        }

        .detail i {
            font-size: $normalInnerCursorSize * 1.2;
        }
    }

    &-outer-box {
        width: $outerBoxSize;
        height: $outerBoxSize;

        mix-blend-mode: exclusion;

        overflow: visible;
        position: fixed;
        pointer-events: none;
        z-index: 11000;
        // 一开始先让鼠标处于屏幕外
        transform: translate3d(-200px, -200px, 0);

        .normal {
            box-sizing: content-box;
            width: $normalOuterCursorSize;
            height: $normalOuterCursorSize;
            border: 1px solid var(--cursorColor);
            border-radius: 50%;
            // 注：在CSS中不能使用transform属性，因为TweenLite的动画会把它覆盖掉
        }

        .arrow {
            width: $normalOuterCursorSize;
            height: $normalOuterCursorSize;
            position: relative;

            .icon {
                &-left-arrow {
                    position: absolute;
                    right: 100%;
                    top: 50%;
                    transform: translate3d(0, -50%, 0);
                }

                &-right-arrow {
                    position: absolute;
                    left: 100%;
                    top: 50%;
                    transform: translate3d(0, -50%, 0);
                }
            }
        }
    }

    i {
        color: var(--cursorColor);
        font-size: $normalInnerCursorSize;
    }
}
