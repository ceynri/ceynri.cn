name: Deploy Website

concurrency:
  group: production
  cancel-in-progress: true

on:
  push:
    branches:
      - main
      - action-debug
  pull_request:
    branches:
      - main
  repository_dispatch:
    types: [submodule-update]
  workflow_dispatch:

env:
  NODE_VERSION: 14.20.0

jobs:
  build:
    # use self-hosted HK server for solve the China's Internet speed issue
    runs-on: self-hosted
    # runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PAT }}
          submodules: true

      - name: Update submodules
        run: |
          git submodule update --remote
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git commit -am "docs: update content" || exit 0
          git push || exit 0

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Project install
        run: npm ci

      - name: Cache Node Modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node_modules-${{ runner.os }}-${{ env.NODE_VERSION }}-${{ hashFiles('package-lock.json') }}

      - name: Project build
        run: npm run build

      - name: Project deploy
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          strip_components: 1
          source: dist/
          target: ${{ secrets.TARGET_PATH }}

      # another scp action, but transfer files one by one
      # - name: Project deploy
      #   uses: garygrossgarten/github-action-scp@release
      #   with:
      #     local: dist
      #     remote: ${{ secrets.TARGET_PATH }}
      #     host: ${{ secrets.HOST }}
      #     username: ${{ secrets.USERNAME }}
      #     password: ${{ secrets.PASSWORD }}
