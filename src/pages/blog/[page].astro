---
import type { GetStaticPathsOptions, Page } from 'astro';
import type { CollectionEntry } from 'astro:content';

import { getCollection } from 'astro:content';

import { BaseHead, Pagination, PostCard } from '~/components';
import { BLOG_POST_PER_PAGE, SITE_DESCRIPTION, SITE_TITLE } from '~/consts';
import { AsideLayout } from '~/layouts';

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const rawPosts = (await getCollection('blog', ({ data }) => import.meta.env.DEV || data.published));
  const posts = rawPosts.sort((a, b) => b.data.date.getTime() - a.data.date.getTime());

  return paginate(posts, { pageSize: BLOG_POST_PER_PAGE });
}

interface Props {
  page: Page<CollectionEntry<'blog'>>;
}

const { page } = Astro.props;
const pageTitle = page.currentPage === 1 ? SITE_TITLE : `${SITE_TITLE} - 第${page.currentPage}页`;
---

<!doctype html>
<html lang="zh-CN">
  <head>
    <BaseHead
      title={pageTitle}
      description={SITE_DESCRIPTION}
    />
  </head>
  <body>
    <AsideLayout>
      {page.data.map((post) => (
        <PostCard post={post} />
      ))}

      <Pagination page={page} />
    </AsideLayout>
  </body>
</html>
